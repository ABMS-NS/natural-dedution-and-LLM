from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
import random

# Simulador do comportamento do modelo Qwen-2.5-72B-Instruct
def simulate_qwen_response(prompt: str) -> str:
    # Placeholder: respostas aleatórias para simular o modelo
    responses = [
        "A fruit is a sweet or savory product of a plant containing seeds.",
        "Fruits are edible parts of plants that often develop from flowers.",
        "A fruit is a plant's way of spreading seeds for reproduction.",
    ]
    return random.choice(responses)

# Define o modelo da API
class PromptRequest(BaseModel):
    prompt: str

class PromptResponse(BaseModel):
    answer: str

# Inicializa o app FastAPI
app = FastAPI()

@app.post("/generate", response_model=PromptResponse)
async def generate_answer(request: PromptRequest):
    try:
        # Simula a geração de resposta
        answer = simulate_qwen_response(request.prompt)
        return PromptResponse(answer=answer)
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Erro ao processar: {e}")

@app.get("/")
async def root():
    return {"message": "API para interação com Qwen-2.5-72B-Instruct"}

